name: Build & Release

permissions:
  contents: write

on:
  push:
    paths:
      - 'package.json'

jobs:
  build:
    runs-on: windows-latest

    steps:
    # ────────── clone с двумя коммитами для сравнения версий ──────────
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    # ──────────── читаем версию предыдущего коммита, если есть ─────────
    - name: Previous version
      id: prev
      shell: bash
      run: |
        sha=$(git rev-parse HEAD^1 || echo 0000000)
        if git cat-file -e "$sha":package.json 2>/dev/null; then
          ver=$(git show "$sha":package.json | jq -r .version)
        else
          ver=none
        fi
        echo "version=$ver" >> $GITHUB_OUTPUT

    # ───────────── текущая версия из рабочего дерева ─────────────
    - name: Current version
      id: curr
      shell: bash
      run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

    # ─────── решаем, нужно ли собирать ───────
    - name: Compare versions
      id: changed
      shell: bash
      run: |
        if [ "${{ steps.prev.outputs.version }}" = "none" ] || \
           [ "${{ steps.prev.outputs.version }}" != "${{ steps.curr.outputs.version }}" ]; then
          echo "value=true" >> $GITHUB_OUTPUT
        else
          echo "value=false" >> $GITHUB_OUTPUT
        fi

    - name: Skip (unchanged)
      if: steps.changed.outputs.value != 'true'
      run: echo "Version unchanged – build skipped."

    # ────────────────── Node + Yarn ──────────────────
    - name: Set up Node.js
      if: steps.changed.outputs.value == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: 20          # LTS, C++-аддоны компилируются

    # ─────────────── условный кэш Yarn ───────────────
    - name: Cache Yarn
      if: steps.changed.outputs.value == 'true' && hashFiles('yarn.lock') != ''
      uses: actions/cache@v4
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    # ─────────────── установка зависимостей ───────────────
    - name: Install dependencies
      if: steps.changed.outputs.value == 'true'
      shell: bash
      run: |
        if [ -f yarn.lock ]; then
          yarn install --frozen-lockfile
        else
          yarn install --no-lockfile --non-interactive
        fi

    # ──────────────────── сборка с electron-forge package ────────────────────
    - name: Package with electron-forge
      if: steps.changed.outputs.value == 'true'
      run: yarn package

    # ──────────────────── сборка с electron-builder ────────────────────
    - name: Build with electron-builder
      if: steps.changed.outputs.value == 'true'
      run: yarn electron-builder --config electron-builder.yml --pd ./out/NHApp-win32-x64

    # ─────────── загружаем артефакты в Actions ───────────
    - name: Upload artifacts
      if: steps.changed.outputs.value == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: rectron-build
        path: |
          release/*.exe
          release/*.blockmap
          release/latest.yml

    # ─────────────────── GitHub Release ───────────────────
    - name: Create GitHub Release
      if: steps.changed.outputs.value == 'true'
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ steps.curr.outputs.version }}
        name: v${{ steps.curr.outputs.version }}
        files: |
          release/*.exe
          release/*.blockmap
          release/latest.yml