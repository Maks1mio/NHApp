# .github/workflows/release.yml
name: Build & Release

permissions:
  contents: write

on:
  push:
    paths:
      - "package.json"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 2 }

      - name: Previous version
        id: prev
        shell: bash
        run: |
          sha=$(git rev-parse HEAD^1 || echo 0000000)
          if git cat-file -e "$sha":package.json 2>/dev/null; then
            ver=$(git show "$sha":package.json | jq -r .version)
          else
            ver=none
          fi
          echo "version=$ver" >> $GITHUB_OUTPUT

      - name: Current version
        id: curr
        shell: bash
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: changed
        shell: bash
        run: |
          if [ "${{ steps.prev.outputs.version }}" = "none" ] || \
             [ "${{ steps.prev.outputs.version }}" != "${{ steps.curr.outputs.version }}" ]; then
            echo "value=true" >> $GITHUB_OUTPUT
          else
            echo "value=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip (unchanged)
        if: steps.changed.outputs.value != 'true'
        run: echo "Version unchanged â€“ skipping build."

      - name: Set up Node.js
        if: steps.changed.outputs.value == 'true'
        uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Cache Yarn
        if: steps.changed.outputs.value == 'true' && hashFiles('yarn.lock') != ''
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.changed.outputs.value == 'true'
        run: yarn install --frozen-lockfile

      - name: Build production
        if: steps.changed.outputs.value == 'true'
        run: yarn build_prod

      - name: Create GitHub Release
        if: steps.changed.outputs.value == 'true'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.curr.outputs.version }}
          name: Release v${{ steps.curr.outputs.version }}
          files: |
            dist/*.nupkg
            dist/*.exe
            dist/latest.yml
            dist/RELEASES
